package com.selenium;

import org.junit.jupiter.api.*;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.support.ui.*;

import java.time.Duration;

import static org.junit.jupiter.api.Assertions.*;

public class LoginPageTest {

    private WebDriver driver;
    private WebDriverWait wait;

    private String baseUrl;
    private String userFieldSel;

    @BeforeEach
    public void setUp() {
        baseUrl = System.getProperty("baseUrl", "http://localhost:8088");
        userFieldSel = System.getProperty("userFieldSel", "#email,[name='username'],[name='email']");

        // Cho ph√©p ch·ªçn ch·∫ø ƒë·ªô headless qua command line:
        // mvn test -Dheadless=true (·∫©n) ho·∫∑c -Dheadless=false (hi·ªán)
        boolean headless = Boolean.parseBoolean(System.getProperty("headless", "false"));

        ChromeOptions options = new ChromeOptions();
        if (headless) {
            // Ch·∫°y ·∫©n (kh√¥ng hi·ªán c·ª≠a s·ªï)
            options.addArguments("--headless=new", "--disable-gpu", "--window-size=1920,1200");
        } else {
            // üß≠ Hi·ªán giao di·ªán th·∫≠t
            options.addArguments("--disable-gpu", "--window-size=1920,1200");
        }
        // N·∫øu Chrome l·ªói ‚Äúremote origins‚Äù, th√™m d√≤ng n√†y
        options.addArguments("--remote-allow-origins=*");

        driver = new ChromeDriver(options);
        wait = new WebDriverWait(driver, Duration.ofSeconds(15));

        driver.get(baseUrl + "/login");
        waitForPageReady();
        wait.until(ExpectedConditions.or(
                ExpectedConditions.presenceOfElementLocated(By.cssSelector(userFieldSel)),
                ExpectedConditions.presenceOfElementLocated(By.cssSelector("input")),
                ExpectedConditions.presenceOfElementLocated(By.id("login-button"))));
    }

    @AfterEach
    public void tearDown() {
        if (driver != null)
            driver.quit();
    }

    // ===== Helpers =====
    private void waitForPageReady() {
        new WebDriverWait(driver, Duration.ofSeconds(20))
                .until(d -> ((JavascriptExecutor) d)
                        .executeScript("return document.readyState").equals("complete"));
    }

    private void pause(long milliseconds) {
        try {
            Thread.sleep(milliseconds);
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
        }
    }

    // ===== Tests =====
    @Test
    public void testLoginSuccess() {
        // Nh·∫≠p th√¥ng tin ƒëƒÉng nh·∫≠p h·ª£p l·ªá
        WebElement emailField = driver.findElement(By.id("email"));
        WebElement passwordField = driver.findElement(By.id("password"));
        WebElement loginButton = driver.findElement(By.id("login-button"));

        emailField.sendKeys("nvh1");
        pause(1000); // Ch·ªù 1 gi√¢y ƒë·ªÉ xem thao t√°c
        passwordField.sendKeys("nvhnvh");
        pause(1000);
        loginButton.click();
        pause(2000); // Ch·ªù 2 gi√¢y ƒë·ªÉ xem k·∫øt qu·∫£

        // Ki·ªÉm tra ƒëi·ªÅu h∆∞·ªõng sau khi ƒëƒÉng nh·∫≠p th√†nh c√¥ng
        String currentUrl = driver.getCurrentUrl();
        assertEquals("http://localhost:8088/", currentUrl);
    }

    @Test
    public void testLoginFailure() {
        // Nh·∫≠p th√¥ng tin ƒëƒÉng nh·∫≠p kh√¥ng h·ª£p l·ªá
        WebElement emailField = driver.findElement(By.id("email"));
        WebElement passwordField = driver.findElement(By.id("password"));
        WebElement loginButton = driver.findElement(By.id("login-button"));

        emailField.sendKeys("invalidUser");
        pause(1000);
        passwordField.sendKeys("invalidPassword");
        pause(1000);
        loginButton.click();
        pause(2000);

        // Ki·ªÉm tra th√¥ng b√°o l·ªói
        WebElement errorMessage = driver.findElement(By.className("alert-danger"));
        assertEquals("L·ªói", errorMessage.getText());
    }

    @Test
    public void testEmptyFields() {
        // ƒê·ªÉ tr·ªëng c√°c tr∆∞·ªùng v√† nh·∫•n n√∫t ƒëƒÉng nh·∫≠p
        WebElement loginButton = driver.findElement(By.id("login-button"));
        pause(1000);
        loginButton.click();
        pause(2000);

        // Ki·ªÉm tra th√¥ng b√°o l·ªói
        WebElement errorMessage = driver.findElement(By.className("alert-danger"));
        assertEquals("L·ªói", errorMessage.getText());
    }
}
